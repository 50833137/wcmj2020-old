var tipuesearch = {"pages": [{'title': '主頁', 'text': 'https://github.com/mdecourse/cmsimde.git \xa0 是一套利用 Python 解譯程式語言所編寫的網際內容管理系統, 使用者可以用來建立動態網站, 靜態網站, 網誌與網際簡報系統. \n 程式語言就其執行的方式, 可以分為編譯式與解譯式等兩種. \n 編譯式語言例如: C 程式語言 \n 解譯式語言例如: Python 程式語言 \n 編寫程式語言是工程師與電腦溝通的途徑之一, 工程師編寫計算機程式在電腦上執行, 可以透過電腦強大與重複的運算能力來解決問題. \n CMSiMDE 就是工程師希望將各種與產品開發的過程資料, 存放在網站上, 除了可用於工程師之間的溝通外, 還能夠將產品開發的細節, 或者特定工具的使用詳細記錄, 以作為往後的參考. \n 如何使用 CMSiMDE \n (1) 以子模組的方式使用 CMSiMDE \n 將 Github 倉儲 git clone 到近端工作區之後, 可以利用 git submodule add 指令將遠端倉儲中的 CMSiMDE 程式碼納為倉儲中的 cmsimde 子目錄, 並且保持與遠端原始碼的版次關聯 (也就是能夠指定採用遠端特定版本的 CMSiMDE 程式碼). \n 好處: 子模組可以與遠端官方的倉儲保持關聯, 一旦 CMSiMDE 更新版本, 使用者可以利用 git pull 直接拉下遠端 CMSiMDE 的最新程式碼. \n 壞處: 使用者若要 git clone 遠端的倉儲至近端, 需要加上 --recurse-submodules 選項 \n (2) 不以子模組的方式使用 CMSiMDE \n 假如不需要保持與遠端 CMSiMDE 倉儲特定版次的關聯性, 可以直接將 CMSiMDE 倉儲中的檔案, 直接放入 cmsimde 目錄, 並將其中 up_dir 的內容複製到希望建立網頁的倉儲主目錄中即可. \n 好處: 使用者可以直接使用 git clone 指令, 拉下遠端倉儲的所有資料. \n 壞處: 失去與遠端 CMSiMDE 倉儲的關聯, 假如要使用最新改版後的 CMSiMDE 原始碼, 必須另外 git clone 然後再取代倉儲中 cmsimde 的所有檔案. \n', 'tags': '', 'url': '主頁.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n 各分組學員可以就以下常見的網際內容, 以組員分工的方式深入研究特定主題, 然後再將結果納入 CMSiMDE 網站, 網誌, 簡報 與 Blogger 網誌內容. \n', 'tags': '', 'url': 'Develop.html'}, {'title': '有關本網站', 'text': '這門課程在教導學員如何利用網際環境管理與工程應用相關的內容管理. \n 總共使用兩套網際內容管理系統: \n https://github.com/mdecourse/cmsimde \n https://www.blogger.com/ \n Please use your student number to \xa0 register a github account . \n 請利用學號註冊一個 Github 帳號 \n Repository (倉儲): \xa0 https://github.com/mdecourse/wcmj2020 \xa0 \n Project (專案): \xa0 https://github.com/mdecourse/wcmj2020/projects/1 \xa0 \n Gitter (討論區): \xa0 https://gitter.im/mdecourse/wcmj2020 \xa0 \n Web site (網站):\xa0 https://mde.tw/wcmj2020 \xa0 \n Blog (網誌): \xa0 https://mde.tw/wcmj2020/blog \xa0 \n Presentation (簡報): \xa0 https://mde.tw/wcmj2020/reveal \xa0 \n \n', 'tags': '', 'url': '有關本網站.html'}, {'title': '分組', 'text': '亂數分組: \n https://mde.tw/wcmj2020/downloads/2020spring_wcmj_1a_list.txt \xa0was taken from\xa0 https://osa.nfu.edu.tw/ \xa0on Feb. 19, 2020. \n The most updated list:\xa0 http://s1.mde.nfu.edu.tw:8000/?semester=1082&courseno=2418 \xa0 \n semester: 1082 \n courseno: 2418 \n Under https protocol use port 7443, for http use port 8000. \n', 'tags': '', 'url': '分組.html'}, {'title': '分組結果', 'text': '常見的網際內容包含: \n 文字 (網誌與網站文字說明, 簡報文字敘述) \n 數學方程式 ( mathjax ) \n 圖檔 (png, jpg, gif, \xa0 svg) \n 動畫 (gif) \xa0 \n 音樂 (mp3 or \xa0 midi ) \n 影片 (embedded mp4) \n 程式 \n HTML5 Canvas \xa0 (2d) \n Three.js \xa0 (3D) \n Brython \n fengari-web \xa0 (Lua) \n Dart -> Javascript \n ============================== group 1 Repository: \xa0 50833110 \xa0 | Site: \xa0 50833110 Repository: \xa0 50833112 \xa0 | Site: \xa0 50833112 Repository: \xa0 50833115 \xa0 | Site: \xa0 50833115 Repository: \xa0 50833123 \xa0 | Site: \xa0 50833123 Repository: \xa0 50833127 \xa0 | Site: \xa0 50833127 Repository: \xa0 50833128 \xa0 | Site: \xa0 50833128 Repository: \xa0 50833129 \xa0 | Site: \xa0 50833129 Repository: \xa0 50833131 \xa0 | Site: \xa0 50833131 Repository: \xa0 50833133 \xa0 | Site: \xa0 50833133 Repository: \xa0 50833138 \xa0 | Site: \xa0 50833138 ============================== group 2 Repository: \xa0 50833101 \xa0 | Site: \xa0 50833101 Repository: \xa0 50833107 \xa0 | Site: \xa0 50833107 Repository: \xa0 50833108 \xa0 | Site: \xa0 50833108 Repository: \xa0 50833111 \xa0 | Site: \xa0 50833111 Repository: \xa0 50833117 \xa0 | Site: \xa0 50833117 Repository: \xa0 50833119 \xa0 | Site: \xa0 50833119 Repository: \xa0 50833122 \xa0 | Site: \xa0 50833122 Repository: \xa0 50833126 \xa0 | Site: \xa0 50833126 Repository: \xa0 50833130 \xa0 | Site: \xa0 50833130 Repository: \xa0 50833134 \xa0 | Site: \xa0 50833134 ============================== group 3 Repository: \xa0 50833104 \xa0 | Site: \xa0 50833104 Repository: \xa0 50833106 \xa0 | Site: \xa0 50833106 Repository: \xa0 50833113 \xa0 | Site: \xa0 50833113 Repository: \xa0 50833114 \xa0 | Site: \xa0 50833114 Repository: \xa0 50833116 \xa0 | Site: \xa0 50833116 Repository: \xa0 50833118 \xa0 | Site: \xa0 50833118 Repository: \xa0 50833120 \xa0 | Site: \xa0 50833120 Repository: \xa0 50833125 \xa0 | Site: \xa0 50833125 Repository: \xa0 50833140 \xa0 | Site: \xa0 50833140 Repository: \xa0 50833141 \xa0 | Site: \xa0 50833141 ============================== group 4 Repository: \xa0 50833102 \xa0 | Site: \xa0 50833102 Repository: \xa0 50833103 \xa0 | Site: \xa0 50833103 Repository: \xa0 50833105 \xa0 | Site: \xa0 50833105 Repository: \xa0 50833109 \xa0 | Site: \xa0 50833109 Repository: \xa0 50833121 \xa0 | Site: \xa0 50833121 Repository: \xa0 50833124 \xa0 | Site: \xa0 50833124 Repository: \xa0 50833135 \xa0 | Site: \xa0 50833135 Repository: \xa0 50833136 \xa0 | Site: \xa0 50833136 Repository: \xa0 50833137 \xa0 | Site: \xa0 50833137 Repository: \xa0 50833139 \xa0 | Site: \xa0 50833139 \n', 'tags': '', 'url': '分組結果.html'}, {'title': '實習項目', 'text': '第八週 \n 請重新下載 \xa0 wcmj2020_tool.7z , 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等) \n 分別利用 ShareX 與 OBS 錄製電腦畫面操作, 說明如何在個人的網站上新增一個標題為"第八週實習"的 H1 頁面, 然後將兩段影片上傳至個人的 youtube 帳號下, 並 embedded 至該頁面中. \n 第九週 \n 請從電腦與網路頁面中, 擷取資料中的圖文資料, 在標題為"第九週實習“的 H1 頁面下, 分別製作兩個 H2 頁面: \n 電腦軟硬體簡介 \n 與 \n 網路架構與設定簡介 \n 課堂上將利用 \xa0 Ethercalc \xa0 擷取各學員的期中自評成績. \n', 'tags': '', 'url': '實習項目.html'}, {'title': '主題', 'text': 'Google Blogger \n Login to your gm email account and download \xa0 2010_BeginningGoogleBlogger.pdf \n WCM \n Login to your gm email account and download \xa0 2020wcm_topic_1.pdf . \n What is a content management system? \n Analyzing your information life cycle. \n Overview of enterprise content management. \n Git \n Login to your gm email account and download \xa0 IntroductionToVersionControlAndGit.pdf . \n What is version control? \n Git installation and setup. \n Git getting started. \n Commits and remote git. \n Github \n Login to your gm email account and download \xa0 GithubPrimer.pdf \n Login to your gm email account and download \xa0 ConflictsGUIToolAdvGit.pdf \n', 'tags': '', 'url': '主題.html'}, {'title': '倉儲與網站', 'text': '\n 請重新下載 \xa0 wcmj2020_tool.7z , 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等). \n 登入 github.com 建立 Github 倉儲, 直接新增 README.md 檔案. \n 將所建立的倉儲 git clone 到近端. \n git submodule add \xa0 https://github.com/mdecourse/cmsimde.git \xa0cmsimde \n 在近端維護動態網站, 轉為靜態後 git add commit push \n \n 以下請各學員分別利用 ShareX 與 OBS 拍攝建立與維護個人倉儲與網站的影片, 完成後將影片 embed 入個人網站的 W8 頁面中. \n', 'tags': '', 'url': '倉儲與網站.html'}, {'title': 'W6', 'text': 'Online education \n 線上直播: Youtube + Portable OBS \n 線上開會: \xa0 https://meet.google.com \xa0 \n \n 讓手機可以利用電腦熱點上網 \n 採用\xa0 https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/ \n 將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過"設定 -> 網路和網際網路 -> 行動熱點", 選擇開啟並編輯"網路名稱與網路密碼"後, 讓至多 8 台手機透過熱點連線上網. \n 但是因為目前 Windows 10 並 未提供 IPv6 網路協定下的網路熱點功能 , 因此在純 IPv6 網路協定下無法使用"行動熱點"服務. \n \n 利用手機鏡頭當作 webcam: \n Android: \xa0 https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows \xa0 iPhone: \xa0 https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/ \xa0 \n 需要 clone 個人倉儲時: \n git clone --recurse-submodules 倉儲_url.git \n 例如:\xa0git clone --recurse-submodules \xa0 https://github.com/mdecourse/wcmj2020.git \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '\n \n \n \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '請重新下載 \xa0 wcmj2020_tool.7z , 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等). \n 學會利用 ShareX 與 OBS 拍攝螢幕操作影片, 並將個人維護倉儲與網站的過程影片放入個人網站中. \n', 'tags': '', 'url': 'W8.html'}, {'title': '第九周實習', 'text': '', 'tags': '', 'url': '第九周實習.html'}, {'title': '電腦軟硬體簡介', 'text': '\n Central processing unit CPU \n 中央處理器 \n 是電腦的主要裝置之一，功能主要是解釋電腦指令以及處理電腦軟件中的數據，也可以說是一部電腦的心臟 \n \n \n \n Arithmetic logic unit ALU \n 算數邏輯單位 \n 是中央處理器的執行單元，是所有中央處理器的核心組成部分，主要功能是進行2進位的算數運算 \n \n \n \n Control unit CU \n 有時為CPU的一部分，有時安裝於CPU外部，負責指揮CPU工作，通過該1裝置的運行來控制其他裝置的活動 \n \n \n 記憶體： \n \n random access memory RAM \n 是與CPU直接交換數據的內部儲存器，他可以隨時讀寫，而且速度很快 \n \n \n \n Read only memory ROM \n 是一種半導體記憶體，特性是一旦儲存資料就無法再改變或刪除，內容不會因為關閉電源而消失 \n \n \n \n 電腦的種類: \n \n Personal computer  個人電腦 \n \n \n \n Workstation \xa0工作站,比個人電腦更高級一些的電腦 \n \n \n \n Mini computer  迷你電腦，規格介於大型電腦與個人電腦之間 \n \n \n \n Mainframe  伺服器主機 \n \n \n \n Super computer  超級電腦 \n', 'tags': '', 'url': '電腦軟硬體簡介.html'}, {'title': '網路架構與設定簡介', 'text': '\n \n \n', 'tags': '', 'url': '網路架構與設定簡介.html'}]};